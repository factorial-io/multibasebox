<?php

/**
 * @file
 * Main functions and hook implementations of the View Unpublished module.
 */

use Drupal\Core\Session\AccountInterface;
use Drupal\node\Entity\NodeType;
use Drupal\node\NodeInterface;

/**
 * Implements hook_node_access_records().
 */
function view_unpublished_node_access_records(NodeInterface $node) {
  // We only care about the node if is unpublished. If not, it is
  // treated just like any other node and we completely ignore it.
  if ($node->isPublished() === FALSE) {
    $grants = array();
    // Unpublished nodes should be viewable to all editors.
    $grants[] = array(
      'realm' => 'view_unpublished_content',
      'gid' => 1,
      'grant_view' => 1,
      'grant_update' => 0,
      'grant_delete' => 0,
      'priority' => 0,
    );
    $grants[] = array(
      'realm' => "view_unpublished_{$node->getType()}_content",
      'gid' => 1,
      'grant_view' => 1,
      'grant_update' => 0,
      'grant_delete' => 0,
      'priority' => 0,
    );
    $grants[] = array(
      'realm' => 'view_unpublished_author',
      'gid' => $node->getOwnerId(),
      'grant_view' => 1,
      'grant_update' => 0,
      'grant_delete' => 0,
      'priority' => 0,
    );
    return $grants;
  }
}

/**
 * Implements hook_node_grants().
 */
function view_unpublished_node_grants(AccountInterface $account, $op) {
  $grants = array();
  if ($op == 'view') {
    if ($account->hasPermission('view own unpublished content')) {
      $grants['view_unpublished_author'] = array($account->id());
    }
    if ($account->hasPermission('view any unpublished content')) {
      $grants['view_unpublished_content'] = array(1);
      return $grants;
    }
    foreach (NodeType::loadMultiple() as $type) {
      $type_id = $type->id();
      if ($account->hasPermission("view any unpublished $type_id content")) {
        $grants["view_unpublished_{$type_id}_content"] = array(1);
      }
    }
  }
  return $grants;
}
