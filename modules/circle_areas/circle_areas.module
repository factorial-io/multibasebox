<?php
use Drupal\Core\Language\LanguageInterface;

function circle_areas_load_translated_node($node) {
  $langcode = \Drupal::languageManager()->getCurrentLanguage(LanguageInterface::TYPE_CONTENT)->getId();
  return \Drupal::service('entity.repository')->getTranslationFromContext($node, $langcode);
}

function circle_areas_node_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  $overview_id = false;
  $parent_id = false;
  $field_name = false;
  $overview_title = t('Overview');
  $overview = null;
  $options = array('set_active_class' => true);
  
  $build['houses_nav'] = array();
  
  if ($entity->type->entity->id() == 'rental_overview') {
    /**
     * Overview Page
     */
    $overview_id = $entity->id();
    $parent_id = $overview_id;
    $field_name = 'field_belongs_to_overview';
    $overview = $entity;
    $build['circles'] = views_embed_view('circle_modules', 'circles_areas_embed');
    $build['field_overlay_image'][0]['#item_attributes'] = array('data-lazy' => true);
    if ($view_mode == 'full') {
       $build['field_image'][0]['#item_attributes'] = array('data-lazy' => true);
    }
  } else if ($entity->type->entity->id() == 'rental_house') {
    /**
     * House Page
     */
    $parent_id = $entity->field_belongs_to_overview->getValue()[0]['target_id'];
    $overview_id = $parent_id;
    $field_name = 'field_belongs_to_overview';
    $moduleIds = [];
    foreach ($entity->field_layer->referencedEntities() as $paragraph) {
      $moduleIds[] = $paragraph->get('field_module_reference')->getValue()[0]['target_id'];
    }
    $build['circles'] = views_embed_view('circle_modules', 'circles_areas_embed', join($moduleIds, '+'));
  } else if ($entity->type->entity->id() == 'rental_floor') {
    /**
     * Floor Page
     */
    $parent_id = $entity->field_house->getValue()[0]['target_id'];
    $field_name = 'field_house';
    $house = node_load($parent_id);
    $overview_id = $house->field_belongs_to_overview->getValue()[0]['target_id'];
    
    $build['houses_nav']['#house_link'] = Drupal\Core\Link::createFromRoute(circle_areas_load_translated_node($house)->getTitle(), 'entity.node.canonical', ['node' => $parent_id], $options);
    
    
    $build['house_title'] = array(
      '#markup' => circle_areas_load_translated_node($house)->getTitle(),
    );
    
    $build['field_contact'] = $house->field_contact->view('full');
    $build['field_vcard'] = $house->field_vcard->view('full');
    $build['field_email'] = $house->field_email->view('full');
    $total_office_space = 0;
    $total_foyer_space = 0;
    $total_terrace_space = 0;
    foreach ($entity->field_floor_data->referencedEntities() as $paragraph) {
      $total_office_space += space_field_value($paragraph->get('field_floor_office_space')->getValue());
      $total_foyer_space += space_field_value($paragraph->get('field_floor_foyer_space')->getValue());
      $total_terrace_space += space_field_value($paragraph->get('field_floor_terrace_space')->getValue());
    }
    $build['total_office_space'] = array(
      '#markup' => format_space($total_office_space)
    );
    $build['total_foyer_space'] = array(
      '#markup' => format_space($total_foyer_space)
    );
    $build['total_terrace_space'] = array(
      '#markup' => format_space($total_terrace_space)
    );
    
    $build['field_overlay_image'][0]['#item_attributes'] = array('data-lazy' => true);
  }
  
  if ($overview_id && $parent_id) {
    $overview = node_load($overview_id);
    
    $query = \Drupal::entityQuery('node');
    $query->condition($field_name.'.target_id', $parent_id)->sort('field_position', 'ASC')->sort('title', 'ASC');
    
    $nids = $query->execute();
    $links = [];
    
    
    foreach (node_load_multiple($nids) as $child) {
      $translation = circle_areas_load_translated_node($child);
      $links[] = Drupal\Core\Link::createFromRoute($translation->getTitle(), 'entity.node.canonical', ['node' => $child->id()], $options);
    }
    $build['houses_nav']['#theme'] ='rental_overview_nav';
    $build['houses_nav']['#links'] = $links;
    $build['houses_nav']['#overview_link'] = Drupal\Core\Link::createFromRoute($overview_title, 'entity.node.canonical', ['node' => $overview_id], $options);
  }
  
  if ($overview) {
    $build['overview_color'] = array(
      '#markup' => $overview->field_color->getValue()[0]['value']
    );
  }
}


function circle_areas_theme()
{
  return array
  (
    'rental_overview_nav' => array
    (
      'variables' => array
      (
        'links' => array(),
        'overview_link' => '',
        'house_link' => ''
      ),
      'template' => 'circle_areas-overview_nav',
    ),
  );
}

function format_space($space) {
  return number_format($space, 2, ',', '');
}

function space_field_value($value) {
  if (isset($value[0])) {
    return $value[0]['value'];
  }
  return 0;
}